stages:
  - build
  - package

django-buildtest:
  stage: build
  script:
    # - echo $DEBUG
    # - apt-get update
    # - apt-get install -y --no-install-recommends gcc
    # - apt-get -qqy install ffmpeg libsm6 libxext6
    # - pip install pipenv

    - cd src/backend/django
    - docker build -t django-server .
    # - docker rm django-server-test
    - printenv
    - docker run --name django-server-test 
      --env DEBUG=${DEBUG}
      django-server python manage.py test
    # - pipenv install --dev --system --deploy
    # - python manage.py test
  only:
    refs:
      - feature/pipelines
  tags:
    - styling-runner

django-package:
  stage: package
  script:
    - docker save -o django-server.tar django-server
    - echo ${DATABASE_PWD} | sudo -S scp -i /home/ubuntu/rcdd-server-key.pem spring.tar ec2-user@3.34.30.156:/tmp
    - sudo scp -i /home/ubuntu/rcdd-server-key.pem spring.tar ec2-user@3.34.30.156:/tmp
# stages:
#   - build-django
#   - build-frontend

# build-django:
#   stage: build-django
#   image: python:3.9
#   script:
#     - apt-get update
#     - apt-get install --no-install-recommends gcc -y
#     - apt-get install ffmpeg libsm6 libxext6 -y
#     - pip install pipenv gdown
#     - mkdir -p ~/.u2net
#     - gdown https://drive.google.com/uc?id=1tCU5MM1LhRgGou5OpmpjBQbSrYIUoYab -O ~/.u2net/u2net.onnx
#     - cd ./src/backend/django
#     - pipenv install --dev --system --deploy

# test-django:
#   stage: build-django
#   image: python:3.9
#   script:
#     - python manage.py test


# build-frontend-job:
#   stage: build-frontend
#   image: node:latest
#   script:
#     - cd ./src/frontend
#     - npm install
#     - CI=false npm run build
